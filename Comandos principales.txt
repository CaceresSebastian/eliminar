Página web de atajos de GIT
https://training.github.com/downloads/es_ES/github-git-cheat-sheet.pdf


*para retroceder o salir de una accion
>q

*Ver ubicación de las alias, usuario contraseña, conf., etc.
>C:\Users\sebas en el .gitconfig

*Limpiar la consola
>clear

*Abrir el vsCode
>code .

**Iniciar control de versiones de git
>git init

**Crear la rama principal
>git branch -m main

**ver los cambios realizados y no realizados
>git status

**Preparar los archivos que se guardaran en el versionamiento
>git add <nombre archivo>  (Agregar un archivo especifico)
>git add .  (Agregar todos los archivos)

**Crear la version de los archivos junto con el mensaje
>git commit -m "<Mensaje de la versiona>"

*Ver todo el historial de versiones o commits
>git log --graph

**Desacer los cambios realizados que no han sido guardados en commit
>git checkout <nombre archivo>
>git checkout <nombre de la rama>
>git checkout . (todos)

**Ir a un punto de la rama 
>git checkout <id de la rama>

*desacer los cambios guardados en la rama(elimina el progreso o regresa al punto del id, sea que este eliminado o no)
>git reset --hard <id de la rama>

*Ver todo el historial de ramas, hasta los están eliminadas para poder regresar con el reset --hard
>git reflog

*Crear un alias a un comando que utilizas muy seguido
>git config --global alias.<alias del comando> "<el comando sin el git>"  (para usarlo solo es >git <alias>)

*Ignorar archivos que no quieres que esten en el versionamiento
>touch .gitignore
 -Dentro del archivo .gitignore se va a escribir los archivos a ignorar
 >**/<Nombre del archivo a ignorar>

*Ver a detalle los cambios que se han realizado pero que no han sido guardados en el commit
>git diffgit 

*Poner un tag al punto en donde te encuetras (o podes ponerle un nombre de version y ahi es donde podes regresar v_1.0.0)
>git tag <Nombre del tag>

*Visualizar los tags
>git tags

*Ir al tag
>git checkout tags/<Nombre del tag>

**Crear una nueva rama (secundaria)
>git branch <nombre de la nueva rama>

**Cambiar de rama
>git switch <nombre de la rama>

**Unir ramas (que la otra rama <> se una a la rama actual)
>git merge <nombre de la rama>
 -Si por alguna razón hubo un conflicto al unir, eliminar la que se desea 

**Crear un guardado temporal LOCAL(por si no quieres agregar un commit, ya que tiene errores o lo que sea)
>git stash

*Quieres ver si tienes guardados temporales
>git stash list

**Quieres traer todos los guardados temporales
>git stash pop

**Si quieres eliminar todos los temporales (ya sea pq no es necesario continuar desde ahi o lo que sea)
>git stash drop

*Para ver si otra rama tiene un cambio y si no hay conflicto con la principal
>git diff <Nombre de la rama>

**ELIMINAR una rama
>git branch -d <Nombre de la rama>